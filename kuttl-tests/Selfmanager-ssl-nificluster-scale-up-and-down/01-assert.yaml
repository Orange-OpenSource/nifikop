# Check Nificluster created
apiVersion: nifi.orange.com/v1alpha1
kind: NifiCluster
metadata:
  name: selfmanagednifi
#status:
#  state: ClusterRunning TODO Find out why it always switch between ClusterRunning & Reconciling
---

# Check all nodes
apiVersion: v1
kind: Pod
metadata:
  labels:
    nifi_cr: selfmanagednifi
    nodeId: '0'
status:
  phase: Running
  initContainerStatuses:
    - name: zookeeper
      state:
        terminated:
          exitCode: 0
          reason: Completed
      ready: true
  containerStatuses:
    - name: nifi
      ready: true
      started: true
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    nifi_cr: selfmanagednifi
    nodeId: '1'
status:
  phase: Running
  initContainerStatuses:
    - name: zookeeper
      state:
        terminated:
          exitCode: 0
          reason: Completed
      ready: true
  containerStatuses:
    - name: nifi
      ready: true
      started: true
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    nifi_cr: selfmanagednifi
    nodeId: '2'
status:
  phase: Running
  initContainerStatuses:
    - name: zookeeper
      state:
        terminated:
          exitCode: 0
          reason: Completed
      ready: true
  containerStatuses:
    - name: nifi
      ready: true
      started: true
---

# Check secrets
apiVersion: v1
kind: Secret
metadata:
  name: selfmanagednifi-config-0
---
apiVersion: v1
kind: Secret
metadata:
  name: selfmanagednifi-config-1
---
apiVersion: v1
kind: Secret
metadata:
  name: selfmanagednifi-config-2
---

# SSL Secrets
apiVersion: v1
kind: Secret
metadata:
  name: selfmanagednifi-0-server-certificate
---
apiVersion: v1
kind: Secret
metadata:
  name: selfmanagednifi-1-server-certificate
---
apiVersion: v1
kind: Secret
metadata:
  name: selfmanagednifi-2-server-certificate
---
apiVersion: v1
kind: Secret
metadata:
  name: selfmanagednifi-ca-certificate
---
apiVersion: v1
kind: Secret
metadata:
  name: selfmanagednifi-controller
---


# Check headless service
apiVersion: v1
kind: Service
metadata:
  name: selfmanagednifi-headless
spec:
  clusterIP: None
  type: ClusterIP
---

# Cannot currently assert if a field is present / not empty with Kuttl => https://github.com/kudobuilder/kuttl/issues/262
#data:
#  ca.crt: ""
#  keystore.jks: ""
#  password: ""
#  tls.crt: ""
#  tls.key: ""
#  truststore.jks: ""
#  type: Opaque
##
#data:
#  authorizers.xml: ""
#  bootstrap-notification-servces.xml: ""
#  bootstrap.conf: ""
#  logback.xml: ""
#  login-identity-providers.xml: ""
#  nifi.properties: ""
#  state-management.xml: ""
#  zookeeper.properties: ""
#type: Opaque

# TODO How to check if the cluster is "ok" ?
#---
#apiVersion: kuttl.dev/v1beta1
#kind: TestAssert
#commands:
#  # Test correct amount of pods
#  - command: '[[ $(kubectl get pods --selector=nifi_cr=selfmanagednifi | wc -l) -eq 4 ]] && echo "passed"'